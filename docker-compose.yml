version: '3.8'
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: zerowaste-api
    image: zerowaste-api
    command: pm2-runtime app.js -i max
    volumes:
      - .:/usr/app/
      - /usr/app/node_modules
      - ./uploads:/usr/src/app/uploads
    depends_on:
      - postgres
    environment:
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      DATABASE_URL: postgresql://supabase_auth_admin:your-super-secret-and-long-postgres-password@db:54432/postgres
      KEY: ${KEY}
      TRANSLATE_API_KEY: ${TRANSLATE_API_KEY}
    stdin_open: true
    tty: true
    restart: unless-stopped
    networks:
      - postgres
      - bridge
      - traefik_proxy-net
      - app-network
    hostname: "0.0.0.0"
    ports:
      - "8088:8088" 
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.entrypoints=web,websecure
      - traefik.http.services.api.loadbalancer.server.port=8088
      - "traefik.http.routers.api.rule=Host(`api.silasbeckmann.de`) && PathPrefix(`/api`)"
      - traefik.http.routers.api.tls=true
      - traefik.docker.network=traefik_proxy-net
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.entrypoints=web,websecure
      - traefik.http.services.pgadmin.loadbalancer.server.port=80
      - traefik.http.routers.pgadmin.rule=Host(`pgadmin.silasbeckmann.de`)
      - traefik.http.routers.pgadmin.tls=true
      - traefik.docker.network=traefik_proxy-net
      
    networks:
      - postgres
      - traefik_proxy-net
    restart: unless-stopped

networks:
  postgres:
    driver: bridge
  traefik_proxy-net:
    external: true
  bridge:
  app-network:
    driver: bridge

volumes:
    postgres:
    pgadmin:
    uploads:
